// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots Button with circle prop 1`] = `
<View
  accessible={true}
  isTVSelectable={true}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignItems": "center",
      "backgroundColor": "#adb5bd",
      "borderColor": "#e9ecee",
      "borderRadius": 100,
      "borderWidth": 1,
      "height": 50,
      "justifyContent": "center",
      "opacity": 1,
      "padding": 10,
      "width": 50,
    }
  }
>
  <Text
    style={
      Object {
        "color": "#fff",
        "fontSize": 25,
      }
    }
  >
    +
  </Text>
</View>
`;

exports[`Storyshots Button with danger prop 1`] = `
<View
  accessible={true}
  isTVSelectable={true}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignItems": "center",
      "backgroundColor": "#dc302f",
      "borderColor": "#e9ecee",
      "borderWidth": 1,
      "opacity": 1,
      "padding": 10,
    }
  }
>
  <Text
    style={
      Object {
        "color": "#fff",
        "fontSize": undefined,
      }
    }
  >
    press
  </Text>
</View>
`;

exports[`Storyshots Button with hideBorder prop 1`] = `
<View
  accessible={true}
  isTVSelectable={true}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignItems": "center",
      "backgroundColor": "white",
      "borderColor": "#e9ecee",
      "borderWidth": 0,
      "opacity": 1,
      "padding": 10,
    }
  }
>
  <Text
    style={
      Object {
        "color": undefined,
        "fontSize": undefined,
      }
    }
  >
    press
  </Text>
</View>
`;

exports[`Storyshots Button with primary prop 1`] = `
<View
  accessible={true}
  isTVSelectable={true}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignItems": "center",
      "backgroundColor": "#3183c8",
      "borderColor": "#e9ecee",
      "borderWidth": 1,
      "opacity": 1,
      "padding": 10,
    }
  }
>
  <Text
    style={
      Object {
        "color": "#fff",
        "fontSize": undefined,
      }
    }
  >
    press
  </Text>
</View>
`;

exports[`Storyshots Button with round prop 1`] = `
<View
  accessible={true}
  isTVSelectable={true}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignItems": "center",
      "backgroundColor": "#adb5bd",
      "borderColor": "#e9ecee",
      "borderRadius": 100,
      "borderWidth": 1,
      "opacity": 1,
      "padding": 10,
    }
  }
>
  <Text
    style={
      Object {
        "color": "#fff",
        "fontSize": undefined,
      }
    }
  >
    +
  </Text>
</View>
`;

exports[`Storyshots Button with secondary prop 1`] = `
<View
  accessible={true}
  isTVSelectable={true}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignItems": "center",
      "backgroundColor": "white",
      "borderColor": "#e9ecee",
      "borderWidth": 1,
      "opacity": 1,
      "padding": 10,
    }
  }
>
  <Text
    style={
      Object {
        "color": undefined,
        "fontSize": undefined,
      }
    }
  >
    press
  </Text>
</View>
`;

exports[`Storyshots Button with success prop 1`] = `
<View
  accessible={true}
  isTVSelectable={true}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignItems": "center",
      "backgroundColor": "#37c172",
      "borderColor": "#e9ecee",
      "borderWidth": 1,
      "opacity": 1,
      "padding": 10,
    }
  }
>
  <Text
    style={
      Object {
        "color": "#fff",
        "fontSize": undefined,
      }
    }
  >
    press
  </Text>
</View>
`;

exports[`Storyshots Button with value 1`] = `
<View
  accessible={true}
  isTVSelectable={true}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignItems": "center",
      "backgroundColor": "#adb5bd",
      "borderColor": "#e9ecee",
      "borderWidth": 1,
      "opacity": 1,
      "padding": 10,
    }
  }
>
  <Text
    style={
      Object {
        "color": "#fff",
        "fontSize": undefined,
      }
    }
  >
    press
  </Text>
</View>
`;

exports[`Storyshots Card with all uppers and all lowers 1`] = `
<View
  accessible={true}
  isTVSelectable={true}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "backgroundColor": "white",
      "height": 80,
      "justifyContent": "space-between",
      "opacity": 1,
      "padding": 5,
      "shadowColor": "#000",
      "shadowOffset": Object {
        "height": 6,
        "width": 4,
      },
      "shadowOpacity": 0.2,
      "shadowRadius": 2,
    }
  }
>
  <View
    style={
      Object {
        "flexDirection": "row",
        "justifyContent": "space-between",
      }
    }
  >
    <View>
      <Text
        style={
          Object {
            "color": undefined,
          }
        }
      >
        Upper left
      </Text>
    </View>
    <View>
      <Text
        style={
          Object {
            "color": undefined,
          }
        }
      >
        Upper center
      </Text>
    </View>
    <View>
      <Text
        style={
          Object {
            "color": undefined,
          }
        }
      >
        Upper right
      </Text>
    </View>
  </View>
  <View
    style={
      Object {
        "flexDirection": "row",
        "justifyContent": "space-between",
      }
    }
  >
    <View>
      <Text
        style={
          Object {
            "color": undefined,
          }
        }
      >
        Lower left
      </Text>
    </View>
    <View>
      <Text
        style={
          Object {
            "color": undefined,
          }
        }
      >
        Lower center left
      </Text>
    </View>
    <View>
      <Text
        style={
          Object {
            "color": undefined,
          }
        }
      >
        Lower center right
      </Text>
    </View>
    <View>
      <Text
        style={
          Object {
            "color": undefined,
          }
        }
      >
        Lower right
      </Text>
    </View>
  </View>
</View>
`;

exports[`Storyshots Card with all uppers and lowers and bold upper left 1`] = `
<View
  accessible={true}
  isTVSelectable={true}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "backgroundColor": "white",
      "height": 80,
      "justifyContent": "space-between",
      "opacity": 1,
      "padding": 5,
      "shadowColor": "#000",
      "shadowOffset": Object {
        "height": 6,
        "width": 4,
      },
      "shadowOpacity": 0.2,
      "shadowRadius": 2,
    }
  }
>
  <View
    style={
      Object {
        "flexDirection": "row",
        "justifyContent": "space-between",
      }
    }
  >
    <View>
      <Text
        style={
          Object {
            "color": undefined,
            "fontWeight": "bold",
          }
        }
      >
        Upper left
      </Text>
    </View>
    <View>
      <Text
        style={
          Object {
            "color": undefined,
          }
        }
      >
        Upper center
      </Text>
    </View>
    <View>
      <Text
        style={
          Object {
            "color": undefined,
          }
        }
      >
        Upper right
      </Text>
    </View>
  </View>
  <View
    style={
      Object {
        "flexDirection": "row",
        "justifyContent": "space-between",
      }
    }
  >
    <View>
      <Text
        style={
          Object {
            "color": undefined,
          }
        }
      >
        Lower left
      </Text>
    </View>
    <View>
      <Text
        style={
          Object {
            "color": undefined,
          }
        }
      >
        Lower center left
      </Text>
    </View>
    <View>
      <Text
        style={
          Object {
            "color": undefined,
          }
        }
      >
        Lower center right
      </Text>
    </View>
    <View>
      <Text
        style={
          Object {
            "color": undefined,
          }
        }
      >
        Lower right
      </Text>
    </View>
  </View>
</View>
`;

exports[`Storyshots Card with lower left 1`] = `
<View
  accessible={true}
  isTVSelectable={true}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "backgroundColor": "white",
      "height": 80,
      "justifyContent": "space-between",
      "opacity": 1,
      "padding": 5,
      "shadowColor": "#000",
      "shadowOffset": Object {
        "height": 6,
        "width": 4,
      },
      "shadowOpacity": 0.2,
      "shadowRadius": 2,
    }
  }
>
  <View
    style={
      Object {
        "flexDirection": "row",
        "justifyContent": "space-between",
      }
    }
  >
    <View />
    <View />
    <View />
  </View>
  <View
    style={
      Object {
        "flexDirection": "row",
        "justifyContent": "space-between",
      }
    }
  >
    <View>
      <Text
        style={
          Object {
            "color": undefined,
          }
        }
      >
        Lower left
      </Text>
    </View>
    <View />
    <View />
    <View />
  </View>
</View>
`;

exports[`Storyshots Card with lower left and right 1`] = `
<View
  accessible={true}
  isTVSelectable={true}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "backgroundColor": "white",
      "height": 80,
      "justifyContent": "space-between",
      "opacity": 1,
      "padding": 5,
      "shadowColor": "#000",
      "shadowOffset": Object {
        "height": 6,
        "width": 4,
      },
      "shadowOpacity": 0.2,
      "shadowRadius": 2,
    }
  }
>
  <View
    style={
      Object {
        "flexDirection": "row",
        "justifyContent": "space-between",
      }
    }
  >
    <View />
    <View />
    <View />
  </View>
  <View
    style={
      Object {
        "flexDirection": "row",
        "justifyContent": "space-between",
      }
    }
  >
    <View>
      <Text
        style={
          Object {
            "color": undefined,
          }
        }
      >
        Lower left
      </Text>
    </View>
    <View />
    <View />
    <View>
      <Text
        style={
          Object {
            "color": undefined,
          }
        }
      >
        Lower right
      </Text>
    </View>
  </View>
</View>
`;

exports[`Storyshots Card with lower left, right and center-left center-right 1`] = `
<View
  accessible={true}
  isTVSelectable={true}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "backgroundColor": "white",
      "height": 80,
      "justifyContent": "space-between",
      "opacity": 1,
      "padding": 5,
      "shadowColor": "#000",
      "shadowOffset": Object {
        "height": 6,
        "width": 4,
      },
      "shadowOpacity": 0.2,
      "shadowRadius": 2,
    }
  }
>
  <View
    style={
      Object {
        "flexDirection": "row",
        "justifyContent": "space-between",
      }
    }
  >
    <View />
    <View />
    <View />
  </View>
  <View
    style={
      Object {
        "flexDirection": "row",
        "justifyContent": "space-between",
      }
    }
  >
    <View>
      <Text
        style={
          Object {
            "color": undefined,
          }
        }
      >
        Lower left
      </Text>
    </View>
    <View>
      <Text
        style={
          Object {
            "color": undefined,
          }
        }
      >
        Lower center left
      </Text>
    </View>
    <View>
      <Text
        style={
          Object {
            "color": undefined,
          }
        }
      >
        Lower center right
      </Text>
    </View>
    <View>
      <Text
        style={
          Object {
            "color": undefined,
          }
        }
      >
        Lower right
      </Text>
    </View>
  </View>
</View>
`;

exports[`Storyshots Card with lower right 1`] = `
<View
  accessible={true}
  isTVSelectable={true}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "backgroundColor": "white",
      "height": 80,
      "justifyContent": "space-between",
      "opacity": 1,
      "padding": 5,
      "shadowColor": "#000",
      "shadowOffset": Object {
        "height": 6,
        "width": 4,
      },
      "shadowOpacity": 0.2,
      "shadowRadius": 2,
    }
  }
>
  <View
    style={
      Object {
        "flexDirection": "row",
        "justifyContent": "space-between",
      }
    }
  >
    <View />
    <View />
    <View />
  </View>
  <View
    style={
      Object {
        "flexDirection": "row",
        "justifyContent": "space-between",
      }
    }
  >
    <View />
    <View />
    <View />
    <View>
      <Text
        style={
          Object {
            "color": undefined,
          }
        }
      >
        Lower right
      </Text>
    </View>
  </View>
</View>
`;

exports[`Storyshots Card with upper center slot 1`] = `
<View
  accessible={true}
  isTVSelectable={true}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "backgroundColor": "white",
      "height": 80,
      "justifyContent": "space-between",
      "opacity": 1,
      "padding": 5,
      "shadowColor": "#000",
      "shadowOffset": Object {
        "height": 6,
        "width": 4,
      },
      "shadowOpacity": 0.2,
      "shadowRadius": 2,
    }
  }
>
  <View
    style={
      Object {
        "flexDirection": "row",
        "justifyContent": "space-between",
      }
    }
  >
    <View />
    <View>
      <Text
        style={
          Object {
            "color": undefined,
          }
        }
      >
        Upper center
      </Text>
    </View>
    <View />
  </View>
  <View
    style={
      Object {
        "flexDirection": "row",
        "justifyContent": "space-between",
      }
    }
  >
    <View />
    <View />
    <View />
    <View />
  </View>
</View>
`;

exports[`Storyshots Card with upper left & right and lower left & right 1`] = `
<View
  accessible={true}
  isTVSelectable={true}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "backgroundColor": "white",
      "height": 80,
      "justifyContent": "space-between",
      "opacity": 1,
      "padding": 5,
      "shadowColor": "#000",
      "shadowOffset": Object {
        "height": 6,
        "width": 4,
      },
      "shadowOpacity": 0.2,
      "shadowRadius": 2,
    }
  }
>
  <View
    style={
      Object {
        "flexDirection": "row",
        "justifyContent": "space-between",
      }
    }
  >
    <View>
      <Text
        style={
          Object {
            "color": undefined,
          }
        }
      >
        Upper left
      </Text>
    </View>
    <View />
    <View>
      <Text
        style={
          Object {
            "color": undefined,
          }
        }
      >
        Upper right
      </Text>
    </View>
  </View>
  <View
    style={
      Object {
        "flexDirection": "row",
        "justifyContent": "space-between",
      }
    }
  >
    <View>
      <Text
        style={
          Object {
            "color": undefined,
          }
        }
      >
        Lower left
      </Text>
    </View>
    <View />
    <View />
    <View>
      <Text
        style={
          Object {
            "color": undefined,
          }
        }
      >
        Lower right
      </Text>
    </View>
  </View>
</View>
`;

exports[`Storyshots Card with upper left and upper right 1`] = `
<View
  accessible={true}
  isTVSelectable={true}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "backgroundColor": "white",
      "height": 80,
      "justifyContent": "space-between",
      "opacity": 1,
      "padding": 5,
      "shadowColor": "#000",
      "shadowOffset": Object {
        "height": 6,
        "width": 4,
      },
      "shadowOpacity": 0.2,
      "shadowRadius": 2,
    }
  }
>
  <View
    style={
      Object {
        "flexDirection": "row",
        "justifyContent": "space-between",
      }
    }
  >
    <View>
      <Text
        style={
          Object {
            "color": undefined,
          }
        }
      >
        Upper left
      </Text>
    </View>
    <View />
    <View>
      <Text
        style={
          Object {
            "color": undefined,
          }
        }
      >
        Upper right
      </Text>
    </View>
  </View>
  <View
    style={
      Object {
        "flexDirection": "row",
        "justifyContent": "space-between",
      }
    }
  >
    <View />
    <View />
    <View />
    <View />
  </View>
</View>
`;

exports[`Storyshots Card with upper left slot 1`] = `
<View
  accessible={true}
  isTVSelectable={true}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "backgroundColor": "white",
      "height": 80,
      "justifyContent": "space-between",
      "opacity": 1,
      "padding": 5,
      "shadowColor": "#000",
      "shadowOffset": Object {
        "height": 6,
        "width": 4,
      },
      "shadowOpacity": 0.2,
      "shadowRadius": 2,
    }
  }
>
  <View
    style={
      Object {
        "flexDirection": "row",
        "justifyContent": "space-between",
      }
    }
  >
    <View>
      <Text
        style={
          Object {
            "color": undefined,
          }
        }
      >
        Upper left
      </Text>
    </View>
    <View />
    <View />
  </View>
  <View
    style={
      Object {
        "flexDirection": "row",
        "justifyContent": "space-between",
      }
    }
  >
    <View />
    <View />
    <View />
    <View />
  </View>
</View>
`;

exports[`Storyshots Card with upper left, center and right 1`] = `
<View
  accessible={true}
  isTVSelectable={true}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "backgroundColor": "white",
      "height": 80,
      "justifyContent": "space-between",
      "opacity": 1,
      "padding": 5,
      "shadowColor": "#000",
      "shadowOffset": Object {
        "height": 6,
        "width": 4,
      },
      "shadowOpacity": 0.2,
      "shadowRadius": 2,
    }
  }
>
  <View
    style={
      Object {
        "flexDirection": "row",
        "justifyContent": "space-between",
      }
    }
  >
    <View>
      <Text
        style={
          Object {
            "color": undefined,
          }
        }
      >
        Upper left
      </Text>
    </View>
    <View>
      <Text
        style={
          Object {
            "color": undefined,
          }
        }
      >
        Upper center
      </Text>
    </View>
    <View>
      <Text
        style={
          Object {
            "color": undefined,
          }
        }
      >
        Upper right
      </Text>
    </View>
  </View>
  <View
    style={
      Object {
        "flexDirection": "row",
        "justifyContent": "space-between",
      }
    }
  >
    <View />
    <View />
    <View />
    <View />
  </View>
</View>
`;

exports[`Storyshots Card with upper left, lower left & right 1`] = `
<View
  accessible={true}
  isTVSelectable={true}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "backgroundColor": "white",
      "height": 80,
      "justifyContent": "space-between",
      "opacity": 1,
      "padding": 5,
      "shadowColor": "#000",
      "shadowOffset": Object {
        "height": 6,
        "width": 4,
      },
      "shadowOpacity": 0.2,
      "shadowRadius": 2,
    }
  }
>
  <View
    style={
      Object {
        "flexDirection": "row",
        "justifyContent": "space-between",
      }
    }
  >
    <View>
      <Text
        style={
          Object {
            "color": undefined,
          }
        }
      >
        Upper left
      </Text>
    </View>
    <View />
    <View />
  </View>
  <View
    style={
      Object {
        "flexDirection": "row",
        "justifyContent": "space-between",
      }
    }
  >
    <View>
      <Text
        style={
          Object {
            "color": undefined,
          }
        }
      >
        Lower left
      </Text>
    </View>
    <View />
    <View />
    <View>
      <Text
        style={
          Object {
            "color": undefined,
          }
        }
      >
        Lower right
      </Text>
    </View>
  </View>
</View>
`;

exports[`Storyshots Card with upper right slot 1`] = `
<View
  accessible={true}
  isTVSelectable={true}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "backgroundColor": "white",
      "height": 80,
      "justifyContent": "space-between",
      "opacity": 1,
      "padding": 5,
      "shadowColor": "#000",
      "shadowOffset": Object {
        "height": 6,
        "width": 4,
      },
      "shadowOpacity": 0.2,
      "shadowRadius": 2,
    }
  }
>
  <View
    style={
      Object {
        "flexDirection": "row",
        "justifyContent": "space-between",
      }
    }
  >
    <View />
    <View />
    <View>
      <Text
        style={
          Object {
            "color": undefined,
          }
        }
      >
        Upper right
      </Text>
    </View>
  </View>
  <View
    style={
      Object {
        "flexDirection": "row",
        "justifyContent": "space-between",
      }
    }
  >
    <View />
    <View />
    <View />
    <View />
  </View>
</View>
`;

exports[`Storyshots Clock default 1`] = `
<Text
  style={
    Object {
      "color": undefined,
      "fontSize": 16,
    }
  }
>
  00:00:01
</Text>
`;

exports[`Storyshots DatePickerIOS default 1`] = `
<View>
  <RCTDatePicker
    date={1545973200000}
    locale="en"
    maximumDate={1546232400000}
    minimumDate={1545973200000}
    minuteInterval="1"
    mode="date"
    onChange={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "height": 216,
      }
    }
  />
</View>
`;

exports[`Storyshots EmailInput with value 1`] = `
<View
  style={
    Object {
      "borderBottomColor": "#dc302f",
      "borderBottomWidth": 1,
      "color": "#dc302f",
    }
  }
>
  <TextInput
    autoFocus={false}
    keyboardType="default"
    onBlur={[Function]}
    onChangeText={[Function]}
    onFocus={[Function]}
    placeholder="placeholder"
    value="value"
  />
</View>
`;

exports[`Storyshots FlatList default 1`] = `null`;

exports[`Storyshots FlatList horizontal layout 1`] = `null`;

exports[`Storyshots FlatList multi column 1`] = `null`;

exports[`Storyshots FlatList when empty 1`] = `null`;

exports[`Storyshots FlatList with ItemSeparatorComponent 1`] = `null`;

exports[`Storyshots FlatList with footer 1`] = `null`;

exports[`Storyshots FlatList with header 1`] = `null`;

exports[`Storyshots FlatList with initialNumToRender 1`] = `null`;

exports[`Storyshots FlatList with refresh 1`] = `null`;

exports[`Storyshots Form with children 1`] = `
<View
  style={Object {}}
>
  <View
    style={
      Object {
        "borderBottomColor": undefined,
        "borderBottomWidth": 1,
      }
    }
  >
    <Text
      style={
        Object {
          "color": undefined,
        }
      }
    >
      Text
    </Text>
    <TextInput
      autoFocus={false}
      keyboardType="default"
      onBlur={[Function]}
      onChangeText={[Function]}
      onFocus={[Function]}
      placeholder="enter text"
    />
  </View>
  <View
    style={
      Object {
        "borderBottomColor": undefined,
        "borderBottomWidth": 1,
      }
    }
  >
    <Text
      style={
        Object {
          "color": undefined,
        }
      }
    >
      Email
    </Text>
    <TextInput
      autoFocus={false}
      keyboardType="default"
      onBlur={[Function]}
      onChangeText={[Function]}
      onFocus={[Function]}
      placeholder="enter email"
    />
  </View>
  <View
    accessible={true}
    isTVSelectable={true}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#37c172",
        "borderColor": "#e9ecee",
        "borderWidth": 1,
        "opacity": 1,
        "padding": 10,
      }
    }
  >
    <Text
      style={
        Object {
          "color": undefined,
          "fontSize": undefined,
        }
      }
    >
      submit
    </Text>
  </View>
</View>
`;

exports[`Storyshots Image default 1`] = `
<Image
  blurRadius={20}
  source={
    Object {
      "testUri": "../../../assets/icon.png",
    }
  }
/>
`;

exports[`Storyshots MaltColor default 1`] = `
<View
  style={
    Object {
      "flexDirection": "row",
      "minHeight": 10,
      "width": "100%",
    }
  }
>
  <Text
    style={
      Object {
        "color": undefined,
      }
    }
  >
    1
  </Text>
  <View
    style={
      Object {
        "backgroundColor": "#fcf695",
        "flex": 1,
        "marginLeft": 5,
      }
    }
  />
</View>
`;

exports[`Storyshots MaltColor with displayValue false 1`] = `
<View
  style={
    Object {
      "flexDirection": "row",
      "minHeight": 10,
      "width": "100%",
    }
  }
>
  <View
    style={
      Object {
        "backgroundColor": "#fcf695",
        "flex": 1,
        "marginLeft": 5,
      }
    }
  />
</View>
`;

exports[`Storyshots MaltColor with styles 1`] = `
<View
  style={
    Object {
      "flexDirection": "row",
      "height": 50,
      "minHeight": 10,
      "width": 50,
    }
  }
>
  <View
    style={
      Object {
        "backgroundColor": "#fcf695",
        "borderRadius": 100,
        "flex": 1,
        "height": 50,
        "marginLeft": 5,
        "width": 50,
      }
    }
  />
</View>
`;

exports[`Storyshots Modal default 1`] = `
<View>
  <Modal
    animationType="slide"
    hardwareAccelerated={false}
    transparent={true}
    visible={false}
  >
    <View
      style={
        Object {
          "marginTop": 22,
        }
      }
    >
      <Text
        style={
          Object {
            "color": undefined,
          }
        }
      >
        I'm a modal
      </Text>
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#adb5bd",
            "borderColor": "#e9ecee",
            "borderWidth": 1,
            "opacity": 1,
            "padding": 10,
          }
        }
      >
        <Text
          style={
            Object {
              "color": undefined,
              "fontSize": undefined,
            }
          }
        >
          Close Modal
        </Text>
      </View>
    </View>
  </Modal>
  <View
    accessible={true}
    isTVSelectable={true}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#adb5bd",
        "borderColor": "#e9ecee",
        "borderWidth": 1,
        "opacity": 1,
        "padding": 10,
      }
    }
  >
    <Text
      style={
        Object {
          "color": undefined,
          "fontSize": undefined,
        }
      }
    >
      Show Modal
    </Text>
  </View>
</View>
`;

exports[`Storyshots NumberInput default 1`] = `
<View
  style={
    Object {
      "borderBottomColor": undefined,
      "borderBottomWidth": 1,
    }
  }
>
  <TextInput
    autoFocus={false}
    keyboardType="numeric"
    onBlur={[Function]}
    onChangeText={[Function]}
    onFocus={[Function]}
    value="2"
  />
</View>
`;

exports[`Storyshots NumberInput with autoFocus 1`] = `
<View
  style={
    Object {
      "borderBottomColor": "#37c172",
      "borderBottomWidth": 1,
      "color": "#37c172",
    }
  }
>
  <TextInput
    autoFocus={false}
    keyboardType="numeric"
    onBlur={[Function]}
    onChangeText={[Function]}
    onFocus={[Function]}
    value={0}
  />
</View>
`;

exports[`Storyshots Select default 1`] = `
<View>
  <View
    accessible={true}
    isTVSelectable={true}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "opacity": 1,
      }
    }
  >
    <View
      style={
        Object {
          "backgroundColor": "rgb(255, 255, 255)",
          "flexDirection": "row",
          "justifyContent": "space-between",
        }
      }
    >
      <Text
        style={
          Object {
            "color": undefined,
            "fontSize": 24,
          }
        }
      >
        Hops
      </Text>
      <Text
        style={
          Object {
            "color": undefined,
            "fontSize": 24,
          }
        }
      >
        ✔
      </Text>
    </View>
  </View>
  <View
    accessible={true}
    isTVSelectable={true}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "opacity": 1,
      }
    }
  >
    <View
      style={
        Object {
          "backgroundColor": "rgba(255, 255, 255, 1)",
          "flexDirection": "row",
          "justifyContent": "space-between",
        }
      }
    >
      <Text
        style={
          Object {
            "color": undefined,
            "fontSize": 24,
          }
        }
      >
        Malt
      </Text>
    </View>
  </View>
  <View
    accessible={true}
    isTVSelectable={true}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "opacity": 1,
      }
    }
  >
    <View
      style={
        Object {
          "backgroundColor": "rgba(255, 255, 255, 1)",
          "flexDirection": "row",
          "justifyContent": "space-between",
        }
      }
    >
      <Text
        style={
          Object {
            "color": undefined,
            "fontSize": 24,
          }
        }
      >
        Yeast
      </Text>
    </View>
  </View>
  <View
    accessible={true}
    isTVSelectable={true}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "opacity": 1,
      }
    }
  >
    <View
      style={
        Object {
          "backgroundColor": "rgba(255, 255, 255, 1)",
          "flexDirection": "row",
          "justifyContent": "space-between",
        }
      }
    >
      <Text
        style={
          Object {
            "color": undefined,
            "fontSize": 24,
          }
        }
      >
        Other
      </Text>
    </View>
  </View>
</View>
`;

exports[`Storyshots Subtitle default 1`] = `
<Text
  style={
    Object {
      "color": undefined,
      "fontSize": 24,
      "fontWeight": "bold",
    }
  }
>
  Subtitle
</Text>
`;

exports[`Storyshots Swipable with swipeLeftComponent 1`] = `
<View
  onMoveShouldSetResponder={[Function]}
  onMoveShouldSetResponderCapture={[Function]}
  onResponderEnd={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderReject={[Function]}
  onResponderRelease={[Function]}
  onResponderStart={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  onStartShouldSetResponderCapture={[Function]}
  style={
    Object {
      "flexDirection": "row",
    }
  }
>
  <View
    style={
      Object {
        "flexGrow": 1,
        "right": 0,
      }
    }
  >
    <Text
      style={
        Object {
          "color": undefined,
          "textAlign": "center",
        }
      }
    >
      Swipe left to see
    </Text>
  </View>
  <View
    onLayout={[Function]}
    style={
      Object {
        "position": "absolute",
        "right": null,
      }
    }
  >
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#dc302f",
          "borderColor": "#e9ecee",
          "borderWidth": 1,
          "opacity": 1,
          "padding": 10,
        }
      }
    >
      <Text
        style={
          Object {
            "color": "#fff",
            "fontSize": undefined,
          }
        }
      >
        Delete
      </Text>
    </View>
  </View>
</View>
`;

exports[`Storyshots Switch default 1`] = `
<RCTSwitch
  disabled={false}
  onChange={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "height": 31,
      "width": 51,
    }
  }
  value={false}
/>
`;

exports[`Storyshots Switch with ThumbColor 1`] = `
<RCTSwitch
  onChange={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "height": 31,
      "width": 51,
    }
  }
  thumbTintColor="#000"
  value={false}
/>
`;

exports[`Storyshots Switch with ios_backgroundColor 1`] = `
<RCTSwitch
  onChange={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Array [
      Object {
        "height": 31,
        "width": 51,
      },
      Object {
        "backgroundColor": "#000",
        "borderRadius": 16,
      },
    ]
  }
  value={false}
/>
`;

exports[`Storyshots Switch with track color 1`] = `
<RCTSwitch
  onChange={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "height": 31,
      "width": 51,
    }
  }
  value={false}
/>
`;

exports[`Storyshots Tab default 1`] = `
<View
  accessible={true}
  isTVSelectable={true}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignItems": "center",
      "opacity": 1,
      "padding": 5,
    }
  }
>
  <Text
    style={
      Object {
        "color": "#adb5bd",
        "fontWeight": "bold",
      }
    }
  >
    Tab
  </Text>
</View>
`;

exports[`Storyshots Tabs default 1`] = `
<View
  style={
    Object {
      "flexDirection": "row",
    }
  }
>
  <View
    accessible={true}
    isTVSelectable={true}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "opacity": 1,
        "padding": 5,
      }
    }
  >
    <Text
      style={
        Object {
          "color": "#adb5bd",
          "fontWeight": "bold",
        }
      }
    >
      active
    </Text>
  </View>
  <View
    accessible={true}
    isTVSelectable={true}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "opacity": 1,
        "padding": 5,
      }
    }
  >
    <Text
      style={
        Object {
          "color": "#adb5bd",
          "fontWeight": "bold",
        }
      }
    >
      inactive
    </Text>
  </View>
</View>
`;

exports[`Storyshots Text default 1`] = `
<Text
  style={
    Object {
      "color": "#dc302f",
      "fontWeight": "bold",
    }
  }
>
  Text
</Text>
`;

exports[`Storyshots TextInput with value 1`] = `
<View
  style={
    Object {
      "borderBottomColor": undefined,
      "borderBottomWidth": 1,
    }
  }
>
  <Text
    style={
      Object {
        "color": undefined,
      }
    }
  >
    Username
  </Text>
  <TextInput
    autoFocus={false}
    keyboardType="default"
    onBlur={[Function]}
    onChangeText={[Function]}
    onFocus={[Function]}
    placeholder=""
    secureTextEntry={false}
    value="text goes here"
  />
</View>
`;

exports[`Storyshots TimerInput empty 1`] = `
<View>
  <RCTInputAccessoryView
    style={
      Array [
        undefined,
        Object {
          "position": "absolute",
        },
      ]
    }
  >
    <Text
      onPress={[Function]}
      style={
        Object {
          "color": "#3183c8",
          "padding": 10,
          "textAlign": "right",
        }
      }
    >
      Done
    </Text>
  </RCTInputAccessoryView>
  <View
    style={
      Object {
        "borderBottomColor": undefined,
        "borderBottomWidth": 1,
      }
    }
  >
    <TextInput
      autoFocus={false}
      keyboardType="numeric"
      onBlur={[Function]}
      onFocus={[Function]}
      placeholder=""
      value=""
    />
  </View>
</View>
`;

exports[`Storyshots Title default 1`] = `
<Text
  style={
    Object {
      "color": "#000",
      "fontSize": 40,
    }
  }
>
  Title
</Text>
`;
