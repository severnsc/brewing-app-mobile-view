// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots Button with circle prop 1`] = `
<View
  accessible={true}
  isTVSelectable={true}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignItems": "center",
      "backgroundColor": "#adb5bd",
      "borderColor": "#d4dde9",
      "borderRadius": 100,
      "borderWidth": 1,
      "height": 50,
      "justifyContent": "center",
      "opacity": 1,
      "padding": 10,
      "width": 50,
    }
  }
>
  <Text
    style={
      Object {
        "color": "white",
        "fontSize": 25,
      }
    }
  >
    +
  </Text>
</View>
`;

exports[`Storyshots Button with danger prop 1`] = `
<View
  accessible={true}
  isTVSelectable={true}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignItems": "center",
      "backgroundColor": "#dc302f",
      "borderColor": "#d4dde9",
      "borderWidth": 1,
      "opacity": 1,
      "padding": 10,
    }
  }
>
  <Text
    style={
      Object {
        "color": "white",
        "fontSize": undefined,
      }
    }
  >
    press
  </Text>
</View>
`;

exports[`Storyshots Button with hideBorder prop 1`] = `
<View
  accessible={true}
  isTVSelectable={true}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignItems": "center",
      "backgroundColor": "white",
      "borderColor": "#d4dde9",
      "borderWidth": 0,
      "opacity": 1,
      "padding": 10,
    }
  }
>
  <Text
    style={
      Object {
        "color": undefined,
        "fontSize": undefined,
      }
    }
  >
    press
  </Text>
</View>
`;

exports[`Storyshots Button with primary prop 1`] = `
<View
  accessible={true}
  isTVSelectable={true}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignItems": "center",
      "backgroundColor": "#3183c8",
      "borderColor": "#d4dde9",
      "borderWidth": 1,
      "opacity": 1,
      "padding": 10,
    }
  }
>
  <Text
    style={
      Object {
        "color": "white",
        "fontSize": undefined,
      }
    }
  >
    press
  </Text>
</View>
`;

exports[`Storyshots Button with round prop 1`] = `
<View
  accessible={true}
  isTVSelectable={true}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignItems": "center",
      "backgroundColor": "#adb5bd",
      "borderColor": "#d4dde9",
      "borderRadius": 100,
      "borderWidth": 1,
      "opacity": 1,
      "padding": 10,
    }
  }
>
  <Text
    style={
      Object {
        "color": "white",
        "fontSize": undefined,
      }
    }
  >
    +
  </Text>
</View>
`;

exports[`Storyshots Button with secondary prop 1`] = `
<View
  accessible={true}
  isTVSelectable={true}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignItems": "center",
      "backgroundColor": "white",
      "borderColor": "#d4dde9",
      "borderWidth": 1,
      "opacity": 1,
      "padding": 10,
    }
  }
>
  <Text
    style={
      Object {
        "color": undefined,
        "fontSize": undefined,
      }
    }
  >
    press
  </Text>
</View>
`;

exports[`Storyshots Button with success prop 1`] = `
<View
  accessible={true}
  isTVSelectable={true}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignItems": "center",
      "backgroundColor": "#37c172",
      "borderColor": "#d4dde9",
      "borderWidth": 1,
      "opacity": 1,
      "padding": 10,
    }
  }
>
  <Text
    style={
      Object {
        "color": "white",
        "fontSize": undefined,
      }
    }
  >
    press
  </Text>
</View>
`;

exports[`Storyshots Button with value 1`] = `
<View
  accessible={true}
  isTVSelectable={true}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignItems": "center",
      "backgroundColor": "#adb5bd",
      "borderColor": "#d4dde9",
      "borderWidth": 1,
      "opacity": 1,
      "padding": 10,
    }
  }
>
  <Text
    style={
      Object {
        "color": "white",
        "fontSize": undefined,
      }
    }
  >
    press
  </Text>
</View>
`;

exports[`Storyshots Card with all uppers and all lowers 1`] = `
<View
  accessible={true}
  isTVSelectable={true}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "backgroundColor": "white",
      "height": 80,
      "justifyContent": "space-between",
      "opacity": 1,
      "padding": 5,
      "shadowColor": "#000",
      "shadowOffset": Object {
        "height": 6,
        "width": 4,
      },
      "shadowOpacity": 0.2,
      "shadowRadius": 2,
    }
  }
>
  <View
    style={
      Object {
        "flexDirection": "row",
        "justifyContent": "space-between",
      }
    }
  >
    <View>
      <Text
        style={
          Object {
            "color": undefined,
          }
        }
      >
        Upper left
      </Text>
    </View>
    <View>
      <Text
        style={
          Object {
            "color": undefined,
          }
        }
      >
        Upper center
      </Text>
    </View>
    <View>
      <Text
        style={
          Object {
            "color": undefined,
          }
        }
      >
        Upper right
      </Text>
    </View>
  </View>
  <View
    style={
      Object {
        "flexDirection": "row",
        "justifyContent": "space-between",
      }
    }
  >
    <View>
      <Text
        style={
          Object {
            "color": undefined,
          }
        }
      >
        Lower left
      </Text>
    </View>
    <View>
      <Text
        style={
          Object {
            "color": undefined,
          }
        }
      >
        Lower center left
      </Text>
    </View>
    <View>
      <Text
        style={
          Object {
            "color": undefined,
          }
        }
      >
        Lower center right
      </Text>
    </View>
    <View>
      <Text
        style={
          Object {
            "color": undefined,
          }
        }
      >
        Lower right
      </Text>
    </View>
  </View>
</View>
`;

exports[`Storyshots Card with all uppers and lowers and bold upper left 1`] = `
<View
  accessible={true}
  isTVSelectable={true}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "backgroundColor": "white",
      "height": 80,
      "justifyContent": "space-between",
      "opacity": 1,
      "padding": 5,
      "shadowColor": "#000",
      "shadowOffset": Object {
        "height": 6,
        "width": 4,
      },
      "shadowOpacity": 0.2,
      "shadowRadius": 2,
    }
  }
>
  <View
    style={
      Object {
        "flexDirection": "row",
        "justifyContent": "space-between",
      }
    }
  >
    <View>
      <Text
        style={
          Object {
            "color": undefined,
            "fontWeight": "bold",
          }
        }
      >
        Upper left
      </Text>
    </View>
    <View>
      <Text
        style={
          Object {
            "color": undefined,
          }
        }
      >
        Upper center
      </Text>
    </View>
    <View>
      <Text
        style={
          Object {
            "color": undefined,
          }
        }
      >
        Upper right
      </Text>
    </View>
  </View>
  <View
    style={
      Object {
        "flexDirection": "row",
        "justifyContent": "space-between",
      }
    }
  >
    <View>
      <Text
        style={
          Object {
            "color": undefined,
          }
        }
      >
        Lower left
      </Text>
    </View>
    <View>
      <Text
        style={
          Object {
            "color": undefined,
          }
        }
      >
        Lower center left
      </Text>
    </View>
    <View>
      <Text
        style={
          Object {
            "color": undefined,
          }
        }
      >
        Lower center right
      </Text>
    </View>
    <View>
      <Text
        style={
          Object {
            "color": undefined,
          }
        }
      >
        Lower right
      </Text>
    </View>
  </View>
</View>
`;

exports[`Storyshots Card with lower left 1`] = `
<View
  accessible={true}
  isTVSelectable={true}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "backgroundColor": "white",
      "height": 80,
      "justifyContent": "space-between",
      "opacity": 1,
      "padding": 5,
      "shadowColor": "#000",
      "shadowOffset": Object {
        "height": 6,
        "width": 4,
      },
      "shadowOpacity": 0.2,
      "shadowRadius": 2,
    }
  }
>
  <View
    style={
      Object {
        "flexDirection": "row",
        "justifyContent": "space-between",
      }
    }
  >
    <View />
    <View />
    <View />
  </View>
  <View
    style={
      Object {
        "flexDirection": "row",
        "justifyContent": "space-between",
      }
    }
  >
    <View>
      <Text
        style={
          Object {
            "color": undefined,
          }
        }
      >
        Lower left
      </Text>
    </View>
    <View />
    <View />
    <View />
  </View>
</View>
`;

exports[`Storyshots Card with lower left and right 1`] = `
<View
  accessible={true}
  isTVSelectable={true}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "backgroundColor": "white",
      "height": 80,
      "justifyContent": "space-between",
      "opacity": 1,
      "padding": 5,
      "shadowColor": "#000",
      "shadowOffset": Object {
        "height": 6,
        "width": 4,
      },
      "shadowOpacity": 0.2,
      "shadowRadius": 2,
    }
  }
>
  <View
    style={
      Object {
        "flexDirection": "row",
        "justifyContent": "space-between",
      }
    }
  >
    <View />
    <View />
    <View />
  </View>
  <View
    style={
      Object {
        "flexDirection": "row",
        "justifyContent": "space-between",
      }
    }
  >
    <View>
      <Text
        style={
          Object {
            "color": undefined,
          }
        }
      >
        Lower left
      </Text>
    </View>
    <View />
    <View />
    <View>
      <Text
        style={
          Object {
            "color": undefined,
          }
        }
      >
        Lower right
      </Text>
    </View>
  </View>
</View>
`;

exports[`Storyshots Card with lower left, right and center-left center-right 1`] = `
<View
  accessible={true}
  isTVSelectable={true}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "backgroundColor": "white",
      "height": 80,
      "justifyContent": "space-between",
      "opacity": 1,
      "padding": 5,
      "shadowColor": "#000",
      "shadowOffset": Object {
        "height": 6,
        "width": 4,
      },
      "shadowOpacity": 0.2,
      "shadowRadius": 2,
    }
  }
>
  <View
    style={
      Object {
        "flexDirection": "row",
        "justifyContent": "space-between",
      }
    }
  >
    <View />
    <View />
    <View />
  </View>
  <View
    style={
      Object {
        "flexDirection": "row",
        "justifyContent": "space-between",
      }
    }
  >
    <View>
      <Text
        style={
          Object {
            "color": undefined,
          }
        }
      >
        Lower left
      </Text>
    </View>
    <View>
      <Text
        style={
          Object {
            "color": undefined,
          }
        }
      >
        Lower center left
      </Text>
    </View>
    <View>
      <Text
        style={
          Object {
            "color": undefined,
          }
        }
      >
        Lower center right
      </Text>
    </View>
    <View>
      <Text
        style={
          Object {
            "color": undefined,
          }
        }
      >
        Lower right
      </Text>
    </View>
  </View>
</View>
`;

exports[`Storyshots Card with lower right 1`] = `
<View
  accessible={true}
  isTVSelectable={true}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "backgroundColor": "white",
      "height": 80,
      "justifyContent": "space-between",
      "opacity": 1,
      "padding": 5,
      "shadowColor": "#000",
      "shadowOffset": Object {
        "height": 6,
        "width": 4,
      },
      "shadowOpacity": 0.2,
      "shadowRadius": 2,
    }
  }
>
  <View
    style={
      Object {
        "flexDirection": "row",
        "justifyContent": "space-between",
      }
    }
  >
    <View />
    <View />
    <View />
  </View>
  <View
    style={
      Object {
        "flexDirection": "row",
        "justifyContent": "space-between",
      }
    }
  >
    <View />
    <View />
    <View />
    <View>
      <Text
        style={
          Object {
            "color": undefined,
          }
        }
      >
        Lower right
      </Text>
    </View>
  </View>
</View>
`;

exports[`Storyshots Card with upper center slot 1`] = `
<View
  accessible={true}
  isTVSelectable={true}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "backgroundColor": "white",
      "height": 80,
      "justifyContent": "space-between",
      "opacity": 1,
      "padding": 5,
      "shadowColor": "#000",
      "shadowOffset": Object {
        "height": 6,
        "width": 4,
      },
      "shadowOpacity": 0.2,
      "shadowRadius": 2,
    }
  }
>
  <View
    style={
      Object {
        "flexDirection": "row",
        "justifyContent": "space-between",
      }
    }
  >
    <View />
    <View>
      <Text
        style={
          Object {
            "color": undefined,
          }
        }
      >
        Upper center
      </Text>
    </View>
    <View />
  </View>
  <View
    style={
      Object {
        "flexDirection": "row",
        "justifyContent": "space-between",
      }
    }
  >
    <View />
    <View />
    <View />
    <View />
  </View>
</View>
`;

exports[`Storyshots Card with upper left & right and lower left & right 1`] = `
<View
  accessible={true}
  isTVSelectable={true}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "backgroundColor": "white",
      "height": 80,
      "justifyContent": "space-between",
      "opacity": 1,
      "padding": 5,
      "shadowColor": "#000",
      "shadowOffset": Object {
        "height": 6,
        "width": 4,
      },
      "shadowOpacity": 0.2,
      "shadowRadius": 2,
    }
  }
>
  <View
    style={
      Object {
        "flexDirection": "row",
        "justifyContent": "space-between",
      }
    }
  >
    <View>
      <Text
        style={
          Object {
            "color": undefined,
          }
        }
      >
        Upper left
      </Text>
    </View>
    <View />
    <View>
      <Text
        style={
          Object {
            "color": undefined,
          }
        }
      >
        Upper right
      </Text>
    </View>
  </View>
  <View
    style={
      Object {
        "flexDirection": "row",
        "justifyContent": "space-between",
      }
    }
  >
    <View>
      <Text
        style={
          Object {
            "color": undefined,
          }
        }
      >
        Lower left
      </Text>
    </View>
    <View />
    <View />
    <View>
      <Text
        style={
          Object {
            "color": undefined,
          }
        }
      >
        Lower right
      </Text>
    </View>
  </View>
</View>
`;

exports[`Storyshots Card with upper left and upper right 1`] = `
<View
  accessible={true}
  isTVSelectable={true}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "backgroundColor": "white",
      "height": 80,
      "justifyContent": "space-between",
      "opacity": 1,
      "padding": 5,
      "shadowColor": "#000",
      "shadowOffset": Object {
        "height": 6,
        "width": 4,
      },
      "shadowOpacity": 0.2,
      "shadowRadius": 2,
    }
  }
>
  <View
    style={
      Object {
        "flexDirection": "row",
        "justifyContent": "space-between",
      }
    }
  >
    <View>
      <Text
        style={
          Object {
            "color": undefined,
          }
        }
      >
        Upper left
      </Text>
    </View>
    <View />
    <View>
      <Text
        style={
          Object {
            "color": undefined,
          }
        }
      >
        Upper right
      </Text>
    </View>
  </View>
  <View
    style={
      Object {
        "flexDirection": "row",
        "justifyContent": "space-between",
      }
    }
  >
    <View />
    <View />
    <View />
    <View />
  </View>
</View>
`;

exports[`Storyshots Card with upper left slot 1`] = `
<View
  accessible={true}
  isTVSelectable={true}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "backgroundColor": "white",
      "height": 80,
      "justifyContent": "space-between",
      "opacity": 1,
      "padding": 5,
      "shadowColor": "#000",
      "shadowOffset": Object {
        "height": 6,
        "width": 4,
      },
      "shadowOpacity": 0.2,
      "shadowRadius": 2,
    }
  }
>
  <View
    style={
      Object {
        "flexDirection": "row",
        "justifyContent": "space-between",
      }
    }
  >
    <View>
      <Text
        style={
          Object {
            "color": undefined,
          }
        }
      >
        Upper left
      </Text>
    </View>
    <View />
    <View />
  </View>
  <View
    style={
      Object {
        "flexDirection": "row",
        "justifyContent": "space-between",
      }
    }
  >
    <View />
    <View />
    <View />
    <View />
  </View>
</View>
`;

exports[`Storyshots Card with upper left, center and right 1`] = `
<View
  accessible={true}
  isTVSelectable={true}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "backgroundColor": "white",
      "height": 80,
      "justifyContent": "space-between",
      "opacity": 1,
      "padding": 5,
      "shadowColor": "#000",
      "shadowOffset": Object {
        "height": 6,
        "width": 4,
      },
      "shadowOpacity": 0.2,
      "shadowRadius": 2,
    }
  }
>
  <View
    style={
      Object {
        "flexDirection": "row",
        "justifyContent": "space-between",
      }
    }
  >
    <View>
      <Text
        style={
          Object {
            "color": undefined,
          }
        }
      >
        Upper left
      </Text>
    </View>
    <View>
      <Text
        style={
          Object {
            "color": undefined,
          }
        }
      >
        Upper center
      </Text>
    </View>
    <View>
      <Text
        style={
          Object {
            "color": undefined,
          }
        }
      >
        Upper right
      </Text>
    </View>
  </View>
  <View
    style={
      Object {
        "flexDirection": "row",
        "justifyContent": "space-between",
      }
    }
  >
    <View />
    <View />
    <View />
    <View />
  </View>
</View>
`;

exports[`Storyshots Card with upper left, lower left & right 1`] = `
<View
  accessible={true}
  isTVSelectable={true}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "backgroundColor": "white",
      "height": 80,
      "justifyContent": "space-between",
      "opacity": 1,
      "padding": 5,
      "shadowColor": "#000",
      "shadowOffset": Object {
        "height": 6,
        "width": 4,
      },
      "shadowOpacity": 0.2,
      "shadowRadius": 2,
    }
  }
>
  <View
    style={
      Object {
        "flexDirection": "row",
        "justifyContent": "space-between",
      }
    }
  >
    <View>
      <Text
        style={
          Object {
            "color": undefined,
          }
        }
      >
        Upper left
      </Text>
    </View>
    <View />
    <View />
  </View>
  <View
    style={
      Object {
        "flexDirection": "row",
        "justifyContent": "space-between",
      }
    }
  >
    <View>
      <Text
        style={
          Object {
            "color": undefined,
          }
        }
      >
        Lower left
      </Text>
    </View>
    <View />
    <View />
    <View>
      <Text
        style={
          Object {
            "color": undefined,
          }
        }
      >
        Lower right
      </Text>
    </View>
  </View>
</View>
`;

exports[`Storyshots Card with upper right slot 1`] = `
<View
  accessible={true}
  isTVSelectable={true}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "backgroundColor": "white",
      "height": 80,
      "justifyContent": "space-between",
      "opacity": 1,
      "padding": 5,
      "shadowColor": "#000",
      "shadowOffset": Object {
        "height": 6,
        "width": 4,
      },
      "shadowOpacity": 0.2,
      "shadowRadius": 2,
    }
  }
>
  <View
    style={
      Object {
        "flexDirection": "row",
        "justifyContent": "space-between",
      }
    }
  >
    <View />
    <View />
    <View>
      <Text
        style={
          Object {
            "color": undefined,
          }
        }
      >
        Upper right
      </Text>
    </View>
  </View>
  <View
    style={
      Object {
        "flexDirection": "row",
        "justifyContent": "space-between",
      }
    }
  >
    <View />
    <View />
    <View />
    <View />
  </View>
</View>
`;

exports[`Storyshots EmailInput with autoFocus 1`] = `
<View
  style={
    Object {
      "borderBottomColor": "#37c172",
      "borderBottomWidth": 1,
      "color": "#37c172",
    }
  }
>
  <TextInput
    autoFocus={false}
    keyboardType="default"
    onChangeText={[Function]}
    onFocus={[Function]}
    selectioncolor="#21252a"
    value="undefined"
  />
</View>
`;

exports[`Storyshots EmailInput with label 1`] = `
<View
  style={
    Object {
      "borderBottomColor": "#21252a",
      "borderBottomWidth": 1,
    }
  }
>
  <Text
    style={
      Object {
        "color": "#21252a",
      }
    }
  >
    Email
  </Text>
  <TextInput
    autoFocus={false}
    keyboardType="default"
    onChangeText={[Function]}
    onFocus={[Function]}
    placeholder="me@example.com"
    selectioncolor="#21252a"
    value="undefined"
  />
</View>
`;

exports[`Storyshots EmailInput with placeholder 1`] = `
<View
  style={
    Object {
      "borderBottomColor": "#21252a",
      "borderBottomWidth": 1,
    }
  }
>
  <TextInput
    autoFocus={false}
    keyboardType="default"
    onChangeText={[Function]}
    onFocus={[Function]}
    placeholder="Placeholder"
    selectioncolor="#21252a"
    value="undefined"
  />
</View>
`;

exports[`Storyshots EmailInput with value 1`] = `
<View
  style={
    Object {
      "borderBottomColor": "#21252a",
      "borderBottomWidth": 1,
    }
  }
>
  <TextInput
    autoFocus={false}
    keyboardType="default"
    onChangeText={[Function]}
    onFocus={[Function]}
    selectioncolor="#21252a"
    value="me@example.com"
  />
</View>
`;

exports[`Storyshots Form with children 1`] = `
<View>
  <View
    style={
      Object {
        "borderBottomColor": "#21252a",
        "borderBottomWidth": 1,
      }
    }
  >
    <Text
      style={
        Object {
          "color": "#21252a",
        }
      }
    >
      Text
    </Text>
    <TextInput
      autoFocus={false}
      keyboardType="default"
      onChangeText={[Function]}
      onFocus={[Function]}
      placeholder="Enter text here"
      selectioncolor="#21252a"
      value=""
    />
  </View>
  <View
    style={
      Object {
        "borderBottomColor": "#21252a",
        "borderBottomWidth": 1,
      }
    }
  >
    <Text
      style={
        Object {
          "color": "#21252a",
        }
      }
    >
      Email
    </Text>
    <TextInput
      autoFocus={false}
      keyboardType="default"
      onChangeText={[Function]}
      onFocus={[Function]}
      placeholder="Enter email here"
      selectioncolor="#21252a"
      value=""
    />
  </View>
  <View
    accessible={true}
    isTVSelectable={true}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#37c172",
        "borderColor": "#d4dde9",
        "borderWidth": 1,
        "opacity": 1,
        "padding": 10,
      }
    }
  >
    <Text
      style={
        Object {
          "color": undefined,
          "fontSize": undefined,
        }
      }
    >
      submit
    </Text>
  </View>
</View>
`;

exports[`Storyshots Form with style 1`] = `
<View
  style={
    Object {
      "borderColor": "black",
      "borderWidth": 1,
    }
  }
>
  <View
    style={
      Object {
        "borderBottomColor": "#21252a",
        "borderBottomWidth": 1,
      }
    }
  >
    <Text
      style={
        Object {
          "color": "#21252a",
        }
      }
    >
      Text
    </Text>
    <TextInput
      autoFocus={false}
      keyboardType="default"
      onChangeText={[Function]}
      onFocus={[Function]}
      placeholder="Enter text here"
      selectioncolor="#21252a"
      value=""
    />
  </View>
  <View
    style={
      Object {
        "borderBottomColor": "#21252a",
        "borderBottomWidth": 1,
      }
    }
  >
    <Text
      style={
        Object {
          "color": "#21252a",
        }
      }
    >
      Email
    </Text>
    <TextInput
      autoFocus={false}
      keyboardType="default"
      onChangeText={[Function]}
      onFocus={[Function]}
      placeholder="Enter email here"
      selectioncolor="#21252a"
      value=""
    />
  </View>
  <View
    accessible={true}
    isTVSelectable={true}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#37c172",
        "borderColor": "#d4dde9",
        "borderWidth": 1,
        "opacity": 1,
        "padding": 10,
      }
    }
  >
    <Text
      style={
        Object {
          "color": undefined,
          "fontSize": undefined,
        }
      }
    >
      submit
    </Text>
  </View>
</View>
`;

exports[`Storyshots NumberInput default 1`] = `
<View
  style={
    Object {
      "borderBottomColor": "#21252a",
      "borderBottomWidth": 1,
    }
  }
>
  <TextInput
    autoFocus={false}
    keyboardType="numeric"
    onChangeText={[Function]}
    onFocus={[Function]}
    selectioncolor="#21252a"
    value="2"
  />
</View>
`;

exports[`Storyshots NumberInput with autoFocus 1`] = `
<View
  style={
    Object {
      "borderBottomColor": "#37c172",
      "borderBottomWidth": 1,
      "color": "#37c172",
    }
  }
>
  <TextInput
    autoFocus={false}
    keyboardType="numeric"
    onChangeText={[Function]}
    onFocus={[Function]}
    selectioncolor="#21252a"
    value="0"
  />
</View>
`;

exports[`Storyshots NumberInput with label 1`] = `
<View
  style={
    Object {
      "borderBottomColor": "#21252a",
      "borderBottomWidth": 1,
    }
  }
>
  <Text
    style={
      Object {
        "color": "#21252a",
      }
    }
  >
    Age
  </Text>
  <TextInput
    autoFocus={false}
    keyboardType="numeric"
    onChangeText={[Function]}
    onFocus={[Function]}
    selectioncolor="#21252a"
    value="0"
  />
</View>
`;

exports[`Storyshots Subtitle default 1`] = `
<Text
  style={
    Object {
      "color": undefined,
      "fontSize": 24,
    }
  }
>
  Subtitle
</Text>
`;

exports[`Storyshots Subtitle with bold 1`] = `
<Text
  style={
    Object {
      "color": undefined,
      "fontSize": 24,
      "fontWeight": "bold",
    }
  }
>
  Bold
</Text>
`;

exports[`Storyshots Subtitle with style 1`] = `
<Text
  style={
    Object {
      "color": undefined,
      "fontSize": 24,
      "fontStyle": "italic",
    }
  }
>
  Italic
</Text>
`;

exports[`Storyshots Text default 1`] = `
<Text
  style={
    Object {
      "color": undefined,
    }
  }
>
  some text
</Text>
`;

exports[`Storyshots Text with bold 1`] = `
<Text
  style={
    Object {
      "color": undefined,
      "fontWeight": "bold",
    }
  }
>
  bold text
</Text>
`;

exports[`Storyshots Text with color 1`] = `
<Text
  style={
    Object {
      "color": "red",
    }
  }
>
  I'm red
</Text>
`;

exports[`Storyshots Text with danger 1`] = `
<Text
  style={
    Object {
      "color": "#dc302f",
    }
  }
>
  Error!
</Text>
`;

exports[`Storyshots Text with style 1`] = `
<Text
  style={
    Object {
      "color": undefined,
      "fontSize": 32,
    }
  }
>
  larger
</Text>
`;

exports[`Storyshots Text with success 1`] = `
<Text
  style={
    Object {
      "color": "#37c172",
    }
  }
>
  Success!
</Text>
`;

exports[`Storyshots TextInput with autoFocus 1`] = `
<View
  style={
    Object {
      "borderBottomColor": "#37c172",
      "borderBottomWidth": 1,
      "color": "#37c172",
    }
  }
>
  <Text
    style={
      Object {
        "borderBottomColor": "#37c172",
        "color": "#37c172",
      }
    }
  >
    Focus
  </Text>
  <TextInput
    autoFocus={false}
    keyboardType="default"
    onChangeText={[Function]}
    onFocus={[Function]}
    selectioncolor="#21252a"
    value="Im focused!"
  />
</View>
`;

exports[`Storyshots TextInput with isError 1`] = `
<View
  style={
    Object {
      "borderBottomColor": "#dc302f",
      "borderBottomWidth": 1,
      "color": "#dc302f",
    }
  }
>
  <Text
    style={
      Object {
        "borderBottomColor": "#dc302f",
        "color": "#dc302f",
      }
    }
  >
    Password
  </Text>
  <TextInput
    autoFocus={false}
    keyboardType="default"
    onChangeText={[Function]}
    onFocus={[Function]}
    selectioncolor="#21252a"
    value="undefined"
  />
</View>
`;

exports[`Storyshots TextInput with label 1`] = `
<View
  style={
    Object {
      "borderBottomColor": "#21252a",
      "borderBottomWidth": 1,
    }
  }
>
  <Text
    style={
      Object {
        "color": "#21252a",
      }
    }
  >
    Username
  </Text>
  <TextInput
    autoFocus={false}
    keyboardType="default"
    onChangeText={[Function]}
    onFocus={[Function]}
    placeholder="Enter your username"
    selectioncolor="#21252a"
    value="undefined"
  />
</View>
`;

exports[`Storyshots TextInput with password 1`] = `
<View
  style={
    Object {
      "borderBottomColor": "#21252a",
      "borderBottomWidth": 1,
    }
  }
>
  <TextInput
    autoFocus={false}
    keyboardType="default"
    onChangeText={[Function]}
    onFocus={[Function]}
    secureTextEntry={true}
    selectioncolor="#21252a"
    value="password"
  />
</View>
`;

exports[`Storyshots TextInput with placeholder 1`] = `
<View
  style={
    Object {
      "borderBottomColor": "#21252a",
      "borderBottomWidth": 1,
    }
  }
>
  <TextInput
    autoFocus={false}
    keyboardType="default"
    onChangeText={[Function]}
    onFocus={[Function]}
    placeholder="placeholder"
    selectioncolor="#21252a"
    value="undefined"
  />
</View>
`;

exports[`Storyshots TextInput with value 1`] = `
<View
  style={
    Object {
      "borderBottomColor": "#21252a",
      "borderBottomWidth": 1,
    }
  }
>
  <TextInput
    autoFocus={false}
    keyboardType="default"
    onChangeText={[Function]}
    onFocus={[Function]}
    selectioncolor="#21252a"
    value="input goes here"
  />
</View>
`;

exports[`Storyshots Title default 1`] = `
<Text
  style={
    Object {
      "color": undefined,
      "fontSize": 40,
    }
  }
>
  Title
</Text>
`;

exports[`Storyshots Title with color 1`] = `
<Text
  style={
    Object {
      "color": "red",
      "fontSize": 40,
    }
  }
>
  I'm red
</Text>
`;

exports[`Storyshots Title with style 1`] = `
<Text
  style={
    Object {
      "color": undefined,
      "fontSize": 40,
      "fontStyle": "italic",
    }
  }
>
  Italics
</Text>
`;
